name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Python Setup
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.1" # Updated Python version

      # Node Setup
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      # ML Checks
      - name: ML - Install dependencies
        run: |
          cd ML
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: ML - Run tests
        run: |
          cd ML
          pytest tests/

      # Backend Checks
      - name: Backend - Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Backend - Run tests
        run: |
          cd backend
          pytest tests/

      # Frontend Checks
      - name: Frontend - Install dependencies
        run: |
          cd frontend
          npm install
        #   npm install @testing-library/jest-dom @testing-library/react @testing-library/user-event @babel/plugin-proposal-private-property-in-object --save-dev --force

      - name: Frontend - Run tests
        run: |
          cd frontend
          npm ci
          npm install @babel/plugin-proposal-private-property-in-object --save-dev
  deploy:
    needs: quality-checks
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      # ML and MLflow Deployment
      - name: Deploy ML Code and MLflow
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key" \
            ./ML/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/ml/code/

          ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} '
            cd /opt/ml/code
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            
            sudo mkdir -p /opt/ml/mlflow
            sudo chown -R www-data:www-data /opt/ml/mlflow
            
            sudo cp mlflow.db /opt/ml/mlflow/
            sudo chown www-data:www-data /opt/ml/mlflow/mlflow.db
            
            sudo mkdir -p /opt/ml/mlflow/mlruns
            sudo chown -R www-data:www-data /opt/ml/mlflow/mlruns
            
            sudo systemctl restart mlflow-tracking
          '

      # Backend Deployment
      - name: Deploy Backend
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key" \
            ./backend/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/fastapi-backend/
          ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} '
            cd /opt/fastapi-backend
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl restart fastapi
          '

      # Frontend Build and Deploy
      - name: Build Frontend
        run: |
          cd frontend
          npm install --force
          npm run build

      - name: Deploy Frontend
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key" \
            ./frontend/build/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/var/www/react-app/
          ssh -i ~/.ssh/deploy_key ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} '
            sudo systemctl restart nginx
          '
